// Generated by view binder compiler. Do not edit!
package com.emikhalets.datesdb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.emikhalets.datesdb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDateItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout layoutDateItem;

  @NonNull
  public final TextView textDate;

  @NonNull
  public final TextView textDaysLeft;

  @NonNull
  public final TextView textDaysLeftLabel;

  @NonNull
  public final TextView textHoursLeft;

  @NonNull
  public final TextView textHoursLeftLabel;

  @NonNull
  public final TextView textMinutesLeft;

  @NonNull
  public final TextView textMinutesLeftLabel;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textSecondsLeft;

  @NonNull
  public final TextView textSecondsLeftLabel;

  @NonNull
  public final TextView textType;

  private ActivityDateItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout layoutDateItem, @NonNull TextView textDate,
      @NonNull TextView textDaysLeft, @NonNull TextView textDaysLeftLabel,
      @NonNull TextView textHoursLeft, @NonNull TextView textHoursLeftLabel,
      @NonNull TextView textMinutesLeft, @NonNull TextView textMinutesLeftLabel,
      @NonNull TextView textName, @NonNull TextView textSecondsLeft,
      @NonNull TextView textSecondsLeftLabel, @NonNull TextView textType) {
    this.rootView = rootView;
    this.layoutDateItem = layoutDateItem;
    this.textDate = textDate;
    this.textDaysLeft = textDaysLeft;
    this.textDaysLeftLabel = textDaysLeftLabel;
    this.textHoursLeft = textHoursLeft;
    this.textHoursLeftLabel = textHoursLeftLabel;
    this.textMinutesLeft = textMinutesLeft;
    this.textMinutesLeftLabel = textMinutesLeftLabel;
    this.textName = textName;
    this.textSecondsLeft = textSecondsLeft;
    this.textSecondsLeftLabel = textSecondsLeftLabel;
    this.textType = textType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDateItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDateItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_date_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDateItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout layoutDateItem = (ConstraintLayout) rootView;

      id = R.id.text_date;
      TextView textDate = rootView.findViewById(id);
      if (textDate == null) {
        break missingId;
      }

      id = R.id.text_days_left;
      TextView textDaysLeft = rootView.findViewById(id);
      if (textDaysLeft == null) {
        break missingId;
      }

      id = R.id.text_days_left_label;
      TextView textDaysLeftLabel = rootView.findViewById(id);
      if (textDaysLeftLabel == null) {
        break missingId;
      }

      id = R.id.text_hours_left;
      TextView textHoursLeft = rootView.findViewById(id);
      if (textHoursLeft == null) {
        break missingId;
      }

      id = R.id.text_hours_left_label;
      TextView textHoursLeftLabel = rootView.findViewById(id);
      if (textHoursLeftLabel == null) {
        break missingId;
      }

      id = R.id.text_minutes_left;
      TextView textMinutesLeft = rootView.findViewById(id);
      if (textMinutesLeft == null) {
        break missingId;
      }

      id = R.id.text_minutes_left_label;
      TextView textMinutesLeftLabel = rootView.findViewById(id);
      if (textMinutesLeftLabel == null) {
        break missingId;
      }

      id = R.id.text_name;
      TextView textName = rootView.findViewById(id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.text_seconds_left;
      TextView textSecondsLeft = rootView.findViewById(id);
      if (textSecondsLeft == null) {
        break missingId;
      }

      id = R.id.text_seconds_left_label;
      TextView textSecondsLeftLabel = rootView.findViewById(id);
      if (textSecondsLeftLabel == null) {
        break missingId;
      }

      id = R.id.text_type;
      TextView textType = rootView.findViewById(id);
      if (textType == null) {
        break missingId;
      }

      return new ActivityDateItemBinding((ConstraintLayout) rootView, layoutDateItem, textDate,
          textDaysLeft, textDaysLeftLabel, textHoursLeft, textHoursLeftLabel, textMinutesLeft,
          textMinutesLeftLabel, textName, textSecondsLeft, textSecondsLeftLabel, textType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
